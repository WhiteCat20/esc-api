// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               String          @id @default(uuid())
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  name             String
  nrp              String          @unique
  refresh_token    String
  no_telp          String          @unique
  email            String          @unique
  password         String
  role             Role            @default(Guest)
  status           Status          @default(Unverified)
  UserPreference   UserPreference? @relation(fields: [UserPreferenceId], references: [id])
  UserPreferenceId String?         @unique
  Attendance       Attendance[]
}

model UserPreference {
  id               String   @id @default(uuid())
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now())
  bukti_pembayaran String
  mentor           Int?
  kelompok         Int?
  profile_photo    String?
  description      String?
  user             User?
}

model Agenda {
  id           Int            @id @default(autoincrement())
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  nama_agenda  String
  slug         String
  tanggal      String
  tempat       String
  deskripsi    String
  kode_absensi String?
  attachment   String?
  Attendance   Attendance[]
  Announcement Announcement[]
}

model Announcement {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  nama_admin String
  subject    String   @unique
  deskripsi  String
  attachment String?
  agenda     Agenda   @relation(fields: [agendaId], references: [id])
  agendaId   Int
}

model Attendance {
  id           Int              @id @default(autoincrement())
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  nama_peserta String
  status       AttendanceStatus @default(Hadir)
  agenda       Agenda           @relation(fields: [agendaId], references: [id])
  agendaId     Int
  user         User             @relation(fields: [userId], references: [id])
  userId       String
}

model Submission {
  id                   Int                    @id @default(autoincrement())
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  submission_name      String
  deskripsi            String
  status               Submission_Status      @default(Accepting)
  Submission_responses Submission_responses[]
}

model Submission_responses {
  id                    Int        @id @default(autoincrement())
  createdAt             DateTime   @default(now())
  updatedAt             DateTime   @updatedAt
  nama_peserta          String
  submission_attachment String
  submission            Submission @relation(fields: [submissionId], references: [id])
  submissionId          Int
}

enum Role {
  Guest
  Admin
  Mentor
}

enum Status {
  Unverified
  Verified
}

enum AttendanceStatus {
  Hadir
  TidakHadir
}

enum Submission_Status {
  Accepting
  NotAccepting
}
